apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: xna-orderer1
  namespace: xna-net
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: xna-orderer1
  chart:
    git: https://github.com/liubaninc/bevel.git
    ref: local11
    path: platforms/hyperledger-fabric/charts/orderernode
  values:
    metadata:
      namespace: xna-net
      images:
        orderer: hyperledger/fabric-orderer:2.2.2
        alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
    annotations:  
      service:
        - example1: example2
      pvc:
      deployment:
    orderer:
      name: orderer1
      loglevel: info
      localmspid: xnaMSP
      tlsstatus: true
      keepaliveserverinterval: 10s
    
    consensus:
      name: kafka

    storage:
      storageclassname: xnasc
      storagesize: 512Mi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://101.36.106.59:8200
      role: vault-role
      authpath: devxna-net-auth
      secretprefix: secretsv2/data/crypto/ordererOrganizations/xna-net/orderers/orderer1.xna-net
      imagesecretname: regcred
      serviceaccountname: vault-auth
    kafka:
      readinesscheckinterval: 10
      readinessthreshold: 10
      brokers:
      - kafka-0.broker.xna-net.svc.cluster.local:9092
      - kafka-1.broker.xna-net.svc.cluster.local:9092
      - kafka-2.broker.xna-net.svc.cluster.local:9092
      - kafka-3.broker.xna-net.svc.cluster.local:9092

    proxy:
      provider: haproxy
      external_url_suffix: xnaambassador.blockchain.liubaninc.cn

    genesis: |-
      CiIaILnnaYp8MGFh+3YFB9ipjXQ4VXQ6NKEYAe9VwsV0mc0TEvYhCvMhCvAhCngKWggBEAEaBgiY
      joKQBiIKc3lzY2hhbm5lbCpAYjRiNGYzY2MwYzMwNGY1NWVmNDIzYjNiNTdlZjdkOTlmNDNhNWVi
      YjYwNDM0OGYwNWQ2MjVlM2I5NGQ4Y2FjMhIaEhjRVssjg9xYdV/1Z50KAm6fxehlrW5cMocS8yAK
      8CAS7SASkxwKB09yZGVyZXIShxwS2hcKBnhuYU1TUBLPFxr7FQoDTVNQEvMVEugVEuUVCgZ4bmFN
      U1ASxwYtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQ1BUQ0NBZUtnQXdJQkFnSVVaTExZ
      MVhXanJ0TXV4Y2xWWVR0eThkSkFGeEF3Q2dZSUtvWkl6ajBFQXdJdwpmREVMTUFrR0ExVUVCaE1D
      UjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lE
      VlFRS0RBZFBjbVJsY21WeU1Ua3dOd1lEVlFRREREQmpZUzU0Ym1FdGJtVjBMbmh1WVdGdFltRnoK
      YzJGa2IzSXVZbXh2WTJ0amFHRnBiaTVzYVhWaVlXNXBibU11WTI0d0hoY05Nakl3TWpBM01ESXpN
      elExV2hjTgpNalF4TVRJM01ESXpNelExV2pCOE1Rc3dDUVlEVlFRR0V3SkhRakVQTUEwR0ExVUVD
      QXdHVEc5dVpHOXVNUTh3CkRRWURWUVFIREFaTWIyNWtiMjR4RURBT0JnTlZCQW9NQjA5eVpHVnla
      WEl4T1RBM0JnTlZCQU1NTUdOaExuaHUKWVMxdVpYUXVlRzVoWVcxaVlYTnpZV1J2Y2k1aWJHOWph
      Mk5vWVdsdUxteHBkV0poYm1sdVl5NWpiakJaTUJNRwpCeXFHU000OUFnRUdDQ3FHU000OUF3RUhB
      MElBQkZnWEVHZUJhK0FYM2E4d3JrS1d2SEdRaFM3czRMNFk0MVZjCndyQU5SSWp3STd3ck9mV1RV
      M0FpOUR0S1p1UXlPajhzZnViTjNvYVQyL2p3TEZhNWZyR2pRakJBTUE4R0ExVWQKRXdFQi93UUZN
      QU1CQWY4d0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWREZ1FXQkJScjNuVmJZNThERUVGMgpx
      ODNEL2RQMFNmTmw1ekFLQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBb0dzZjcrQ1M3RG5STHNvbHl3
      ZnBzN3BlCnJuTTltNUYveDVqSDFQdUpDY1VDSVFDb2hnSkZ4b04vMnordHV0U2xmSVdGRW1mUHlV
      WGRDWS9UZnh3WGw1VGwKL2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiK2CC0tLS0tQkVH
      SU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDN2pDQ0FwV2dBd0lCQWdJVVd6Q1p6djluMXJtWFNUcHdJ
      MG9nUHQvazQvb3dDZ1lJS29aSXpqMEVBd0l3CmZERUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZC
      QWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxj
      bVZ5TVRrd053WURWUVFERERCallTNTRibUV0Ym1WMExuaHVZV0Z0WW1GegpjMkZrYjNJdVlteHZZ
      MnRqYUdGcGJpNXNhWFZpWVc1cGJtTXVZMjR3SGhjTk1qSXdNakEzTURJek56QXdXaGNOCk1qTXdN
      akEzTURJME1qQXdXakJrTVFzd0NRWURWUVFHRXdKSFFqRWJNQmtHQTFVRUJ4TVNOVEV1TlRBdkxU
      QXUKTVRNdlRHOXVaRzl1TVJBd0RnWURWUVFLRXdkUGNtUmxjbVZ5TVE0d0RBWURWUVFMRXdWaFpH
      MXBiakVXTUJRRwpBMVVFQXd3TlFXUnRhVzVBZUc1aExXNWxkREJaTUJNR0J5cUdTTTQ5QWdFR0ND
      cUdTTTQ5QXdFSEEwSUFCUE9wCnpSV3A0UC9Xb3MzNHB1SWgxMHRGYTkrWlY3UWlWTDd4ZmtWb1l2
      R2pacGVyOWtpSXNhOGx1U1VhRzNtR0ZzS04KT01XSFdEdStJSWhKTzNSOExUbWpnZ0VMTUlJQkJ6
      QU9CZ05WSFE4QkFmOEVCQU1DQjRBd0RBWURWUjBUQVFILwpCQUl3QURBZEJnTlZIUTRFRmdRVXBG
      YzlhQU45WHhYS1lncUR4Tmw0ZGQrQkk1TXdId1lEVlIwakJCZ3dGb0FVCmE5NTFXMk9mQXhCQmRx
      dk53LzNUOUVuelplY3dJd1lEVlIwUkJCd3dHb0lZWTJFdGRHOXZiSE10T1dOaVlqaGsKTmpnMUxX
      UmthbmRpTUlHQkJnZ3FBd1FGQmdjSUFRUjFleUpoZEhSeWN5STZleUpoWW1GakxtbHVhWFFpT2lK
      MApjblZsSWl3aVlXUnRhVzRpT2lKMGNuVmxJaXdpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpTENK
      b1ppNUZibkp2CmJHeHRaVzUwU1VRaU9pSkJaRzFwYmtCNGJtRXRibVYwSWl3aWFHWXVWSGx3WlNJ
      NkltRmtiV2x1SW4xOU1Bb0cKQ0NxR1NNNDlCQU1DQTBjQU1FUUNJRUlvZk9WNmtNSlVHRjNaUUlE
      TWRwVFF2SXBVSlNieUdXNnNyUnE1Nk84NApBaUJQWVRrZ0tzYUdpZDExbVFTS2hOQ1JLSUJQOG5E
      KzFSVFFhRGREZ0QxZ0tnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQpCDgoEU0hBMhIGU0hB
      MjU2SscGLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNQVENDQWVLZ0F3SUJBZ0lVWkxM
      WTFYV2pydE11eGNsVllUdHk4ZEpBRnhBd0NnWUlLb1pJemowRUF3SXcKZkRFTE1Ba0dBMVVFQmhN
      Q1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZ
      RFZRUUtEQWRQY21SbGNtVnlNVGt3TndZRFZRUUREREJqWVM1NGJtRXRibVYwTG5odVlXRnRZbUZ6
      CmMyRmtiM0l1WW14dlkydGphR0ZwYmk1c2FYVmlZVzVwYm1NdVkyNHdIaGNOTWpJd01qQTNNREl6
      TXpRMVdoY04KTWpReE1USTNNREl6TXpRMVdqQjhNUXN3Q1FZRFZRUUdFd0pIUWpFUE1BMEdBMVVF
      Q0F3R1RHOXVaRzl1TVE4dwpEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5
      WlhJeE9UQTNCZ05WQkFNTU1HTmhMbmh1CllTMXVaWFF1ZUc1aFlXMWlZWE56WVdSdmNpNWliRzlq
      YTJOb1lXbHVMbXhwZFdKaGJtbHVZeTVqYmpCWk1CTUcKQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VI
      QTBJQUJGZ1hFR2VCYStBWDNhOHdya0tXdkhHUWhTN3M0TDRZNDFWYwp3ckFOUklqd0k3d3JPZldU
      VTNBaTlEdEtadVF5T2o4c2Z1Yk4zb2FUMi9qd0xGYTVmckdqUWpCQU1BOEdBMVVkCkV3RUIvd1FG
      TUFNQkFmOHdEZ1lEVlIwUEFRSC9CQVFEQWdHbU1CMEdBMVVkRGdRV0JCUnIzblZiWTU4REVFRjIK
      cTgzRC9kUDBTZk5sNXpBS0JnZ3Foa2pPUFFRREFnTkpBREJHQWlFQW9Hc2Y3K0NTN0RuUkxzb2x5
      d2ZwczdwZQpybk05bTVGL3g1akgxUHVKQ2NVQ0lRQ29oZ0pGeG9OLzJ6K3R1dFNsZklXRkVtZlB5
      VVhkQ1kvVGZ4d1hsNVRsCi9nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoaBkFkbWlucyIw
      CgZBZG1pbnMSJhIcCAESGBIIEgYIARICCAAaDBIKCgZ4bmFNU1AQARoGQWRtaW5zIjMKC0VuZG9y
      c2VtZW50EiQSGggBEhYSCBIGCAESAggAGgoSCAoGeG5hTVNQGgZBZG1pbnMiLwoHUmVhZGVycxIk
      EhoIARIWEggSBggBEgIIABoKEggKBnhuYU1TUBoGQWRtaW5zIi8KB1dyaXRlcnMSJBIaCAESFhII
      EgYIARICCAAaChIICgZ4bmFNU1AaBkFkbWlucyoGQWRtaW5zGiIKCUJhdGNoU2l6ZRIVEgsIChCA
      gIAxGICAQBoGQWRtaW5zGh4KDEJhdGNoVGltZW91dBIOEgQKAjJzGgZBZG1pbnMaHwoTQ2hhbm5l
      bFJlc3RyaWN0aW9ucxIIGgZBZG1pbnMaJAoMQ2FwYWJpbGl0aWVzEhQSCgoICgRWMl8wEgAaBkFk
      bWlucxrYAQoMS2Fma2FCcm9rZXJzEscBErwBCi1rYWZrYS0wLmJyb2tlci54bmEtbmV0LnN2Yy5j
      bHVzdGVyLmxvY2FsOjkwOTIKLWthZmthLTEuYnJva2VyLnhuYS1uZXQuc3ZjLmNsdXN0ZXIubG9j
      YWw6OTA5Mgota2Fma2EtMi5icm9rZXIueG5hLW5ldC5zdmMuY2x1c3Rlci5sb2NhbDo5MDkyCi1r
      YWZrYS0zLmJyb2tlci54bmEtbmV0LnN2Yy5jbHVzdGVyLmxvY2FsOjkwOTIaBkFkbWlucxoiCg1D
      b25zZW5zdXNUeXBlEhESBwoFa2Fma2EaBkFkbWlucyIiCgZBZG1pbnMSGBIOCAMSCgoGQWRtaW5z
      EAIaBkFkbWlucyIqCg9CbG9ja1ZhbGlkYXRpb24SFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zIiIK
      B1JlYWRlcnMSFxINCAMSCQoHUmVhZGVycxoGQWRtaW5zIiIKB1dyaXRlcnMSFxINCAMSCQoHV3Jp
      dGVycxoGQWRtaW5zKgZBZG1pbnMSxgEKC0NvbnNvcnRpdW1zErYBEmwKDXhuYUNvbnNvcnRpdW0S
      WxpAChVDaGFubmVsQ3JlYXRpb25Qb2xpY3kSJxIMCAMSCAoGQWRtaW5zGhcvQ2hhbm5lbC9PcmRl
      cmVyL0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMiLQoGQWRtaW5zEiMSCAgBEgQSAhIA
      GhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMaJgoQSGFz
      aGluZ0FsZ29yaXRobRISEggKBlNIQTI1NhoGQWRtaW5zGi0KGUJsb2NrRGF0YUhhc2hpbmdTdHJ1
      Y3R1cmUSEBIGCP////8PGgZBZG1pbnMamgEKEE9yZGVyZXJBZGRyZXNzZXMShQESagozb3JkZXJl
      cjAueG5hYW1iYXNzYWRvci5ibG9ja2NoYWluLmxpdWJhbmluYy5jbjo4NDQzCjNvcmRlcmVyMS54
      bmFhbWJhc3NhZG9yLmJsb2NrY2hhaW4ubGl1YmFuaW5jLmNuOjg0NDMaFy9DaGFubmVsL09yZGVy
      ZXIvQWRtaW5zGiQKDENhcGFiaWxpdGllcxIUEgoKCAoEVjJfMBIAGgZBZG1pbnMiIgoHV3JpdGVy
      cxIXEg0IAxIJCgdXcml0ZXJzGgZBZG1pbnMiIgoGQWRtaW5zEhgSDggDEgoKBkFkbWlucxACGgZB
      ZG1pbnMiIgoHUmVhZGVycxIXEg0IAxIJCgdSZWFkZXJzGgZBZG1pbnMqBkFkbWlucxoOCgQKAgoA
      CgAKAAoACgA=
